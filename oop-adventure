// const adventurer = {
//     name: "Robin",
//     health: 10,
//     inventory: ["sword", "potion", "artifact"],
//     companion: {
//         name: "Leo",
//         type: "Cat",
//         companion: {  // Adding a companion for Leo
//             name: "Frank",
//             type: "Flea",
//             belongings: ["small hat", "sunglasses"]
//         }
//     },
//     roll(mod = 0) {
//         const result = Math.floor(Math.random() * 20) + 1 + mod;
//         console.log(`${this.name} rolled a ${result}.`);
//     }
// };
// adventurer.roll();

//part 2
class Character {
    constructor(name) {
        this.name = name;
        this.health = 100;
        this.inventory = [];
    }
    roll(mod = 0) {
        const result = Math.floor(Math.random() * 20) + 1 + mod;
        console.log(`${this.name} rolled a ${result}.`);
    }
}

class Adventurer extends Character {
    constructor(name, role) {
        super(name);
        // Adventurers have specialized roles.
        this.role = role;
        // Every adventurer starts with a bed and 50 gold coins.
        this.inventory.push("bedroll", "50 gold coins");
        this.level = 1;
        this.extraPoints = 0;
        this.specialPowers = [];
    }
    // Adventurers have the ability to scout ahead of them.
    scout() {
        console.log(`${this.name} is scouting ahead...`);
        super.roll();
    }
    gainExperience(points) {
        this.extraPoints += points;
        console.log(`${this.name} gained ${points} experience points.`);
        // Check if adventurer should level up
        if (this.extraPoints >= 100 * this.level) {
            this.levelUp();
        }
    }
    // Method to level up the adventurer
    levelUp() {
        this.level++;
        console.log(`${this.name} leveled up to level ${this.level}!`);
        // Add additional abilities or attributes upon leveling up
    }
}


class Companion {
    constructor(name, type) {
        this.name = name;
        this.type = type;
        this.loyaltyLevel = 10; // Starting loyalty level
        this.specialAbilities = [];
    }

    // Method to increase loyalty level
    increaseLoyalty() {
        this.loyaltyLevel++;
        console.log(`${this.name}'s loyalty level increased to ${this.loyaltyLevel}.`);
    }

    // Method to perform a special ability
    performSpecialAbility() {
        // Logic to perform special ability
        console.log(`${this.name} performed a special ability!`);
    }

    acceptQuest(quest) {
        this.currentQuest = quest;
        console.log(`${this.name} accepted the quest: ${quest}`);
    }

    completeQuest() {
        if (this.currentQuest) {
            console.log(`${this.name} completed the quest: ${this.currentQuest}`);
            this.gainExperience(50);
            this.currentQuest = null;
        } else {
            console.log(`${this.name} has no active quest to complete.`);
        }
    }
}



// const robin = new Adventurer("Robin", "Warrior");
// const leo = new Companion("Leo", "Cat");
// const frank = new Companion("Frank", "Flea");

// const robin = new Character("Robin");
// robin.inventory = ["sword", "potion", "artifact"];
// robin.companion = new Character("Leo");
// robin.companion.type = "Cat";
// robin.companion.companion = new Character("Frank");
// robin.companion.companion.type = "Flea";
// robin.companion.companion.inventory = ["small hat", "sunglasses"];

// robin.roll();
// console.log(robin.companion.companion.inventory);
